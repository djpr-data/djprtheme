add_one(2)
add_one <- function(x) {
x + 1
}
add_one(2)
devtools::load_all()
add_one(4)
ggplot2::ggplot()
library(ggplot2)
devtools::document()
devtools::document()
theme_mc()
devtools::load_all(".")
theme_mc()
usethis::use_package("ggplot2")
?replace
?ggplot2::replace
??ggplot2::replace
devtools::load_all(".")
theme_mc()
ggplot(mtcars, aes(x = wt, y = mpg)) +
geom_point()
ggplot(mtcars, aes(x = wt, y = mpg)) +
geom_point() +
theme_mc()
devtools::document()
?theme_mc
usethis::use_test()
class(theme_mc())
devtools::document()
devtools::load_all(".")
devtools::document()
?expect_is
add_one <- function(x = 5) {
x + 1
}
add_one()
add_one(10)
use_mit_license()
use_readme_rmd()
?lifecycle
use_lifecycle_badge("experimental")
use_lifecycle_badge("experimental")
?use_github_actions
use_github_actions()
use_news_md()
use_codecov()
usethis::use_coverage()
?use_github_action
usethis::use_github_action("test-coverage")
?covr::codecov
covr::codecov(token = '6015b780-f1f6-4243-a11e-42fdc5c37122')
covr::codecov()
covr::package_coverage()
use_test()
covr::package_coverage()
devtools::load_all(".")
install_github("djpr-data/djprtheme")
devtools::load_all(".")
app()
devtools::load_all(".")
djpr_watercourse
djpr_bondi_blue
objects("djprtheme")
objects(djprtheme)
objects("djpr_")
djprtheme::djpr_blue
ls("package:ggplot2")
ls("package:djprtheme")
ls("package:djprtheme") -> obj
obj[grepl("djpr_", obj)]
obj[grepl("djpr_", obj)]
getNamespaceExports("djprtheme")
obj <- getNamespaceExports(djprtheme)
getNamespaceExports(djprtheme)
obj <- getNamespaceExports("djprtheme")
obj
grepl("djpr_", obj)
obj[grepl("djpr_", obj)]
obj
obj <- getNamespaceExports("djprtheme")
obj[grepl("djpr_", obj)]
load("~/OneDrive - VicGov/R/djprtheme/data/djpr_blue.rda")
?getNamespaceExports
ls("package:ggplot2")
ls("package:djprtheme")
obj <- ls("package:djprtheme")
obj[grepl("djpr_", obj)]
obj <- obj[grepl("djpr_", obj)]
eval("djpr_blue")
expr("djpr_blue")
deparse("djpr_blue")
substitute("djpr_blue")
eval(parse(djpr_blue))
eval(parse("djpr_blue"))
djpr_blue
eval(parse(text = "djpr_blue"))
obj <- ls("package:djprtheme")
obj <- obj[grepl("^djpr_", obj)]
obj
cols <- eval(parse(text = obj))
cols
obj <- ls("package:djprtheme")
obj <- obj[grepl("^djpr_", obj)]
cols <- lapply(obj, function(x) eval(parse(text = x)))
cols
obj
setNames(cols, obj)
obj
cols
cols <- setNames(cols, obj)
cols
tibble(cols)
tibble::tibble(cols)
dplyr::tibble(cols)
dplyr::tibble(cols) %>%
unnest()
dplyr::tibble(cols) %>%
dplyr::unnest()
dplyr::tibble(cols) %>%
tidyr::unnest()
df <- data.frame(cols = cols,
name = obj)
df
obj <- ls("package:djprtheme")
obj <- obj[grepl("^djpr_", obj)]
cols <- lapply(obj, function(x) eval(parse(text = x)))
cols
obj
obj
cols <- lapply(obj, function(x) eval(parse(text = x)))
as.character(cols)
cols <- as.character(cols)
df <- data.frame(cols = cols,
name = obj)
df
ggplot2::ggplot(df,
aes(x = name,
fill = cols)) +
geom_tile(y = 1)
ggplot2::ggplot(df,
aes(x = name,
y = 1,
fill = cols)) +
geom_tile()
ggplot2::ggplot(df,
aes(x = name,
y = 1,
fill = cols)) +
geom_tile() +
scale_colour_identity()
?scale_fill_manual
cols <- setNames(cols, obj)
cols
ggplot2::ggplot(df,
aes(x = name,
y = 1,
fill = cols)) +
geom_tile() +
scale_colour_manual(values = cols)
cols
obj <- ls("package:djprtheme")
obj <- obj[grepl("^djpr_", obj)]
cols <- lapply(obj, function(x) eval(parse(text = x)))
cols <- as.character(cols)
cols <- setNames(cols, obj)
df <- data.frame(cols = cols,
name = obj)
ggplot2::ggplot(df,
aes(x = name,
y = 1,
fill = cols)) +
geom_tile() +
scale_colour_manual(values = cols)
ggplot2::ggplot(df,
aes(x = name,
y = 1,
fill = cols)) +
geom_tile() +
coord_flip() +
scale_colour_manual(values = cols)
cols
ggplot2::ggplot(df,
aes(x = name,
y = 1,
fill = name)) +
geom_tile() +
coord_flip() +
scale_colour_manual(values = cols)
df
cols
ggplot2::ggplot(df,
aes(x = name,
y = 1,
fill = name)) +
geom_tile() +
coord_flip() +
scale_colour_identity(values = cols)
ggplot2::ggplot(df,
aes(x = name,
y = 1,
fill = name)) +
geom_tile() +
coord_flip() +
scale_fill_manual(values = cols)
ggplot2::ggplot(df,
aes(x = name,
y = 1,
fill = name)) +
geom_tile() +
coord_flip() +
scale_fill_manual(values = cols) +
theme(legend.position = "none",
axis.title = "none")
ggplot2::ggplot(df,
aes(x = name,
y = 1,
fill = name)) +
geom_tile() +
coord_flip() +
scale_fill_manual(values = cols) +
theme(legend.position = "none",
axis.title = element_text())
ggplot2::ggplot(df,
aes(x = name,
y = 1,
fill = name)) +
geom_tile() +
coord_flip() +
scale_fill_manual(values = cols) +
theme(legend.position = "none",
axis.title = element_text(),
axis.ticks = element_blank())
ggplot2::ggplot(df,
aes(x = name,
y = 1,
fill = name)) +
geom_tile() +
coord_flip() +
scale_fill_manual(values = cols) +
theme_void() +
theme(legend.position = "none",
axis.title = element_text(),
axis.ticks = element_blank())
ggplot2::ggplot(df,
aes(x = name,
y = 1,
fill = name)) +
geom_tile() +
coord_flip() +
scale_fill_manual(values = cols) +
theme_void() +
theme(axis.text.x = element_text())
ggplot2::ggplot(df,
aes(x = name,
y = 1,
fill = name)) +
geom_tile() +
coord_flip() +
scale_fill_manual(values = cols) +
theme_void() +
theme(axis.text.y = element_text())
ggplot2::ggplot(df,
aes(x = name,
y = 1,
fill = name)) +
geom_tile() +
coord_flip() +
scale_fill_manual(values = cols) +
theme_void() +
theme(axis.text.y = element_text(),
legend.position = "none")
ggplot2::ggplot(df,
aes(x = name,
y = 1,
fill = name)) +
geom_tile() +
coord_flip() +
scale_fill_manual(values = cols) +
theme_void() +
theme(axis.text.y = element_text(vjust = 1),
legend.position = "none")
ggplot2::ggplot(df,
aes(x = name,
y = 1,
fill = name)) +
geom_tile() +
coord_flip() +
scale_fill_manual(values = cols) +
theme_void() +
theme(axis.text.y = element_text(hjust = 1),
legend.position = "none")
ggplot2::ggplot(df,
aes(x = desc(name),
y = 1,
fill = name)) +
geom_tile() +
coord_flip() +
scale_fill_manual(values = cols) +
theme_void() +
theme(axis.text.y = element_text(hjust = 1),
legend.position = "none")
ggplot2::ggplot(df,
aes(x = factor(name),
y = 1,
fill = name)) +
geom_tile() +
coord_flip() +
scale_fill_manual(values = cols) +
theme_void() +
theme(axis.text.y = element_text(hjust = 1),
legend.position = "none")
ggplot2::ggplot(df,
aes(x = factor(name,
levels = rev(name)),
y = 1,
fill = name)) +
geom_tile() +
coord_flip() +
scale_fill_manual(values = cols) +
theme_void() +
theme(axis.text.y = element_text(hjust = 1),
legend.position = "none")
ggplot2::ggplot(df,
aes(x = factor(name,
levels = rev(name)),
y = 1,
fill = name)) +
geom_tile() +
coord_flip() +
scale_fill_manual(values = cols) +
theme_void() +
theme(axis.text.y = element_text(hjust = 1),
legend.position = "none")
ggplot2::ggplot(df,
aes(x = factor(name,
levels = rev(name)),
y = 1,
fill = name)) +
geom_tile() +
geom_text(aes(label = cols)) +
coord_flip() +
scale_fill_manual(values = cols) +
theme_void() +
theme(axis.text.y = element_text(hjust = 1),
legend.position = "none")
ggplot2::ggplot(df,
aes(x = factor(name,
levels = rev(name)),
y = 1,
fill = name)) +
geom_tile() +
geom_text(aes(label = cols)) +
coord_flip() +
scale_fill_manual(values = cols) +
theme_void() +
theme(axis.text.y = element_text(hjust = 1),
legend.position = "none")
# This is a hacky way to get the vector of colours
obj <- ls("package:djprtheme")
# This is brittle - will fall over if some non-col object
# has the name `djpr_something`
obj <- obj[grepl("^djpr_", obj)]
cols <- lapply(obj, function(x) eval(parse(text = x)))
cols <- as.character(cols)
cols <- setNames(cols, obj)
df <- data.frame(cols = cols,
name = obj)
ggplot2::ggplot(df,
aes(x = factor(name,
levels = rev(name)),
y = 1,
fill = name)) +
geom_tile() +
geom_text(aes(label = cols),
col = "white") +
coord_flip() +
scale_fill_manual(values = cols) +
theme_void() +
theme(axis.text.y = element_text(hjust = 1),
legend.position = "none")
ggplot2::ggplot(df,
aes(x = factor(name,
levels = rev(name)),
y = 1,
fill = name)) +
geom_tile() +
geom_text(aes(label = col),
col = "white") +
coord_flip() +
scale_fill_manual(values = cols) +
theme_void() +
theme(axis.text.y = element_text(hjust = 1),
legend.position = "none")
df <- data.frame(col = cols,
name = obj)
ggplot2::ggplot(df,
aes(x = factor(name,
levels = rev(name)),
y = 1,
fill = name)) +
geom_tile() +
geom_text(aes(label = col),
col = "white") +
coord_flip() +
scale_fill_manual(values = cols) +
theme_void() +
theme(axis.text.y = element_text(hjust = 1),
legend.position = "none")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
x <- readabs::read_abs("6202.0", 1)
x
??zoo::na.approx
